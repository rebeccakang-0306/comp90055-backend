{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\37199\\\\Documents\\\\INFO30005-project-master\\\\src\\\\components\\\\ReceiptTable.js\";\nimport React from \"react\";\nimport '../styles/Users.css';\nimport { Table, Tr } from 'styled-table-component';\nimport { getReceipt, getSurvey } from \"../api\";\nimport { Receipt } from \"../pages/Receipts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ReceiptTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      surveys: []\n    };\n  } // get a list of all users and set the state variable to store the user list\n\n\n  async fetchReceipts() {\n    const data = await getSurvey();\n    this.setState({\n      surveys: data,\n      isLoaded: true\n    });\n  }\n\n  componentDidMount() {\n    this.fetchReceipts();\n  } // render a HTML table with user information\n  // <a href={value.id}>{value.id}</a> insert later\n\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      surveys\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 20\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: \"receipt-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"UserID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"UserType\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"photo1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"photo2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"photo3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"photo4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"photo5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/37199/Documents/INFO30005-project-master/src/components/ReceiptTable.js"],"names":["React","Table","Tr","getReceipt","getSurvey","Receipt","ReceiptTable","Component","constructor","props","state","error","isLoaded","surveys","fetchReceipts","data","setState","componentDidMount","render","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,SAASC,KAAT,EAAgBC,EAAhB,QAA0B,wBAA1B;AACA,SAAQC,UAAR,EAAoBC,SAApB,QAAoC,QAApC;AACA,SAAQC,OAAR,QAAsB,mBAAtB;;AAGA,OAAO,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,OAAO,EAAE;AAHA,KAAb;AAKH,GAR6C,CAU9C;;;AACoB,QAAbC,aAAa,GAAG;AACnB,UAAMC,IAAI,GAAG,MAAMX,SAAS,EAA5B;AAEA,SAAKY,QAAL,CAAc;AAAEH,MAAAA,OAAO,EAAEE,IAAX;AAAiBH,MAAAA,QAAQ,EAAE;AAA3B,KAAd;AACH;;AAEDK,EAAAA,iBAAiB,GAAG;AAChB,SAAKH,aAAL;AACH,GAnB6C,CAqB9C;AACA;;;AACAI,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEP,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA+B,KAAKH,KAA1C;;AACA,QAAIC,KAAJ,EAAW;AACP,0BAAO;AAAA,8BAAaA,KAAK,CAACQ,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO,IAAI,CAACP,QAAL,EAAe;AAClB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,MAEA;AACH,0BACI;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,SAAS,EAAC,eAAjB;AAAA,kCACI;AAAA,mCACA;AAAA,sCACI;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ,eAMI;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,eAOI;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAYI;AAAA;AAAA;AAAA;AAAA,kBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAsBH;AACJ;;AArD6C","sourcesContent":["import React from \"react\";\nimport '../styles/Users.css';\nimport { Table, Tr } from 'styled-table-component';\nimport {getReceipt, getSurvey} from \"../api\";\nimport {Receipt} from \"../pages/Receipts\";\n\n\nexport class ReceiptTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            surveys: [],\n        };\n    }\n\n    // get a list of all users and set the state variable to store the user list\n    async  fetchReceipts() {\n        const data = await getSurvey();\n\n        this.setState({ surveys: data, isLoaded: true })\n    }\n\n    componentDidMount() {\n        this.fetchReceipts();\n    }\n\n    // render a HTML table with user information\n    // <a href={value.id}>{value.id}</a> insert later\n    render() {\n        const { error, isLoaded, surveys } = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else {\n            return (\n                <div>\n                    <Table className=\"receipt-table\">\n                        <thead>\n                        <tr>\n                            <th scope=\"col\">UserID</th>\n                            <th scope=\"col\">UserType</th>\n                            <th scope=\"col\">photo1</th>\n                            <th scope=\"col\">photo2</th>\n                            <th scope=\"col\">photo3</th>\n                            <th scope=\"col\">photo4</th>\n                            <th scope=\"col\">photo5</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                       \n\n                        </tbody>\n                    </Table>\n                </div>\n\n            );\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}