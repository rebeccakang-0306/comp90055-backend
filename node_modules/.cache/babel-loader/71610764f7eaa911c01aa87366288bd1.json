{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\37199\\\\Documents\\\\INFO30005-project-master\\\\src\\\\pages\\\\Users.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useUsers, deleteUser, updateUser } from \"../api\";\nimport Button from \"../components/Button\";\nimport Adduser from \"../components/Adduser\";\nimport '../styles/Users.css';\nimport { UserTable } from \"../components/UserTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Users() {\n  _s();\n\n  const {\n    loading,\n    users,\n    error\n  } = useUsers();\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Something went wrong: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  } // use this to make sure you are getting the right data\n\n\n  console.log(users); // Display a list of the users and update function\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Adduser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UserTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Users, \"8cK/+MvVWM9FquyZQO8mcjteLbA=\", false, function () {\n  return [useUsers];\n});\n\n_c = Users;\nexport function User(user) {\n  _s2();\n\n  const {\n    _id\n  } = user;\n  const [showUpdate, setShowUpdate] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `user user-${_id}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn\",\n        onClick: () => setShowUpdate(!showUpdate),\n        children: showUpdate ? \"-\" : \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UserExtend, { ...user,\n      showUpdate: showUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, _id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(User, \"HbiMvtGSFu8Q4Sn89C87h6pKVSE=\");\n\n_c2 = User;\nexport function UserExtend(props) {\n  _s3();\n\n  const {\n    _id,\n    firstname,\n    lastname,\n    username,\n    password,\n    usertype,\n    showUpdate\n  } = props;\n  const [id_input, setId] = useState(_id);\n  const [first_input, setFirstName] = useState(firstname);\n  const [last_input, setLastName] = useState(lastname);\n  const [username_input, setUsername] = useState(username);\n  const [password_input, setPassword] = useState(password);\n  /* 1 */\n\n  const [usertype_input, setUserType] = useState(usertype);\n\n  function onSubmit() {\n    //call update author function\n    updateUser({\n      _id: id_input,\n      firstname: first_input,\n      lastname: last_input,\n      username: username_input,\n      password: password_input,\n      usertype: usertype_input\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `author-expand ${showUpdate ? \"show\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: 'update-form',\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"first_name\",\n        value: first_input,\n        onChange: event => {\n          setFirstName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"last_name\",\n        value: last_input,\n        onChange: event => {\n          setLastName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: username_input,\n        onChange: event => {\n          setUsername(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"usertype5\",\n        name: \"user_type\",\n        value: usertype_input,\n        onChange: event => {\n          setUserType(event.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Vet\",\n          children: \"Vet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Dog Owner\",\n          children: \"Dog Owner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Dog Breeder\",\n          children: \"Dog Breeder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn-warning\",\n      onClick: onSubmit,\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn-danger\",\n      onClick: () => deleteUser(_id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(UserExtend, \"LyRXdRDmIPnnAAC/su+YLNSa/zM=\");\n\n_c3 = UserExtend;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Users\");\n$RefreshReg$(_c2, \"User\");\n$RefreshReg$(_c3, \"UserExtend\");","map":{"version":3,"sources":["C:/Users/37199/Documents/INFO30005-project-master/src/pages/Users.js"],"names":["React","useState","useUsers","deleteUser","updateUser","Button","Adduser","UserTable","Users","loading","users","error","message","console","log","User","user","_id","showUpdate","setShowUpdate","UserExtend","props","firstname","lastname","username","password","usertype","id_input","setId","first_input","setFirstName","last_input","setLastName","username_input","setUsername","password_input","setPassword","usertype_input","setUserType","onSubmit","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {useUsers, deleteUser, updateUser} from \"../api\";\n\nimport Button from \"../components/Button\";\nimport Adduser from \"../components/Adduser\";\n\nimport '../styles/Users.css';\nimport {UserTable} from \"../components/UserTable\";\n\nexport default function Users() {\n    const { loading, users, error } = useUsers();\n    if (loading) {\n        return <p>Loading...</p>;\n    }\n    if (error) {\n        return <p>Something went wrong: {error.message}</p>;\n    }\n\n    // use this to make sure you are getting the right data\n    console.log(users);\n\n    // Display a list of the users and update function\n    return (\n        <div>\n            <h1>User Management</h1>\n            <Adduser/>\n            <UserTable/>\n        </div>\n    );\n}\n\nexport function User(user) {\n    const { _id } = user;\n    const [showUpdate, setShowUpdate] = useState(false);\n\n    return (\n        <div className={`user user-${_id}`} key={_id}>\n            <div className=\"info\">\n                <Button className={\"btn\"} onClick={() => setShowUpdate(!showUpdate)}>\n                    {showUpdate ? \"-\" : \"+\"}\n                </Button>\n            </div>\n            <UserExtend {...user} showUpdate={showUpdate} />\n        </div>\n    );\n}\n\n\nexport function UserExtend(props) {\n    const { _id, firstname, lastname, username, password, usertype, showUpdate } = props;\n\n    const [id_input, setId] = useState(_id);\n    const [first_input, setFirstName] = useState(firstname);\n    const [last_input, setLastName] = useState(lastname);\n    const [username_input, setUsername] = useState(username);\n    const [password_input, setPassword] = useState(password);\n    /* 1 */\n    const [usertype_input, setUserType] = useState(usertype);\n\n\n    function onSubmit() {\n        //call update author function\n        updateUser({\n            _id: id_input,\n            firstname: first_input,\n            lastname: last_input,\n            username: username_input,\n            password:password_input,\n            usertype:usertype_input\n        });\n    }\n\n    return (\n        <div className={`author-expand ${showUpdate ? \"show\" : \"\"}`}>\n            <form className={'update-form'}>\n                {/* TODO - add value and onChange properties to inputs */}\n                <input type=\"text\" name=\"first_name\" value = {first_input} onChange={event => {setFirstName(event.target.value);}}/>\n                <input type=\"text\" name=\"last_name\" value = {last_input} onChange={event => { setLastName(event.target.value);}}/>\n                <input type=\"text\" name=\"username\" value = {username_input} onChange={event => { setUsername(event.target.value);}}/>\n                <select className={\"usertype5\"} name = \"user_type\" value = {usertype_input} onChange={event => { setUserType(event.target.value);}}>\n                    <option value=\"Vet\">Vet</option>\n                    <option value=\"Dog Owner\">Dog Owner</option>\n                    <option value=\"Dog Breeder\">Dog Breeder</option>\n                </select>\n            </form>\n            <Button\n                className={\"btn-warning\"} onClick={onSubmit}>Update\n            </Button>\n            <Button className={\"btn-danger\"} onClick={() => deleteUser(_id)}>\n                Delete\n            </Button>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}