{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\37199\\\\Documents\\\\INFO30005-project-master\\\\src\\\\components\\\\UserTable.js\";\nimport React from \"react\";\nimport { Table, Tr } from 'styled-table-component';\nimport { getUsers } from \"../api\";\nimport { User } from \"../pages/Users\";\nimport '../styles/Users.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class UserTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      users: [] // list of users\n\n    };\n  } // get a list of all users and set the state variable to store the user list\n\n\n  async fetchUsers() {\n    const data = await getUsers();\n    this.setState({\n      users: data,\n      isLoaded: true\n    });\n  }\n\n  componentDidMount() {\n    this.fetchUsers();\n  } // render a HTML table with user information\n  // <a href={value.id}>{value.id}</a> insert later\n\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      users\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 20\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: \"user-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"User First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"User Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"User Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: users.map(user => {\n              return /*#__PURE__*/_jsxDEV(Tr, {\n                active: true,\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"userData\",\n                  children: user.firstname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"userData\",\n                  children: user.lastname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"userData\",\n                  children: user.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"userData\",\n                  children: user.usertype\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"userData\",\n                  children: [/*#__PURE__*/_jsxDEV(User, { ...user\n                  }, user._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 60\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 33\n                }, this)]\n              }, user._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 36\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/37199/Documents/INFO30005-project-master/src/components/UserTable.js"],"names":["React","Table","Tr","getUsers","User","UserTable","Component","constructor","props","state","error","isLoaded","users","fetchUsers","data","setState","componentDidMount","render","message","map","user","firstname","lastname","username","usertype","_id"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { Table, Tr } from 'styled-table-component';\nimport {getUsers} from \"../api\";\nimport {User} from \"../pages/Users\";\nimport '../styles/Users.css';\n\nexport class UserTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            users: [],        // list of users\n        };\n    }\n\n    // get a list of all users and set the state variable to store the user list\n    async  fetchUsers() {\n        const data = await getUsers();\n\n        this.setState({ users: data, isLoaded: true })\n    }\n\n    componentDidMount(){\n        this.fetchUsers();\n    }\n\n    // render a HTML table with user information\n    // <a href={value.id}>{value.id}</a> insert later\n    render() {\n        const { error, isLoaded, users } = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else {\n            return (\n                <div>\n                    <Table className={\"user-table\"}>\n                        <thead>\n                        <tr>\n                            <th scope=\"col\">User First Name</th>\n                            <th scope=\"col\">User Last Name</th>\n                            <th scope=\"col\">Username</th>\n                            <th scope=\"col\">User Type</th>\n                            <th scope='col'>Update</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {users.map(user => {\n                            return <Tr active key={user._id}>\n                                <td className={\"userData\"}>{user.firstname}</td>\n                                <td className={\"userData\"}>{user.lastname}</td>\n                                <td className={\"userData\"}>{user.username}</td>\n                                <td className={\"userData\"}>{user.usertype}</td>\n                                <td className={\"userData\"}><User key={user._id} {...user} /> </td>\n                            </Tr>\n                        })}\n                        </tbody>\n                    </Table>\n                </div>\n            );\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}