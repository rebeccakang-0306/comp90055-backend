{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { setUsername, setID, getID, Userlogin, setUsertype } from \"./components/CurrentUser\"; // TODO - update this to be your url\n//const BASE_URL = \"https://digiceipttest.herokuapp.com\";\n\nconst BASE_URL = \"http://localhost:9000\";\nexport function getUsers() {\n  const endpoint = BASE_URL + '/get-user';\n  return fetch(endpoint).then(res => {\n    console.log(res);\n    return res.json();\n  });\n}\nexport function getCertainUser(id) {\n  const endpoint = BASE_URL + '/find-given-user/' + id;\n  return fetch(endpoint).then(res => {\n    console.log(res);\n    return res.json();\n  });\n}\nexport function addUser(user) {\n  const {\n    username,\n    password,\n    firstname,\n    lastname,\n    usertype\n  } = user;\n\n  if (!username || !password || !firstname || !lastname || !usertype) {\n    alert(\"must include all fields\");\n    return;\n  }\n\n  const endpoint = BASE_URL + `/insert-user/`;\n  fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      password,\n      firstname,\n      lastname,\n      usertype\n    })\n  }).then(res => {\n    if (res.status === 400) {\n      alert(\"Username exists!\");\n    } else {\n      window.location.reload(true);\n    }\n  });\n}\nexport function register(e, lg) {\n  e.preventDefault();\n  const username = document.getElementById('Username').value;\n  const password = document.getElementById('password').value;\n  const firstname = document.getElementById('firstname').value;\n  const lastname = document.getElementById('lastname').value;\n  const usertype = document.getElementById('usertype').value;\n  let request = {\n    username: username,\n    password: password,\n    firstname: firstname,\n    lastname: lastname,\n\n    /* 1 */\n    usertype: usertype\n  };\n  const endpoint = BASE_URL + `/insert-user/`;\n  axios.post(endpoint, request).then(resp => {\n    console.log(resp);\n\n    if (resp.status === 400) {\n      alert(\"Username exists!\");\n      let path = \"/register\";\n      lg.setState({\n        redirectState: true,\n        path: path\n      });\n    } else {\n      setID(resp.data);\n      setUsername(username);\n      setUsertype(usertype);\n      Userlogin();\n      let path = '/personalpage/' + resp.data;\n      lg.setState({\n        redirectState: true,\n        path: path\n      });\n    }\n  }).catch(err => {\n    alert(\"Username exists! Please change username.\");\n    console.log(err);\n  });\n}\nexport function login(e, lg) {\n  const endpoint = BASE_URL + '/user-login';\n  e.preventDefault();\n  let request = {\n    username: document.getElementById('Username').value,\n    password: document.getElementById('password').value\n  }; //   alert(request.username + request.password);\n\n  axios.post(endpoint, request).then(resp => {\n    if (resp.data.length > 0) {\n      let userID = resp.data[0]['_id'];\n      let username = resp.data[0]['username'];\n      let usertype = resp.data[0]['usertype'];\n      setID(userID);\n      setUsername(username);\n      setUsertype(usertype);\n      Userlogin();\n      console.log(getID());\n\n      if (username === 'admin') {\n        let path = '/users';\n        lg.setState({\n          redirectState: true,\n          path: path\n        });\n      } else {\n        let path = '/personalpage/' + userID;\n        lg.setState({\n          redirectState: true,\n          path: path\n        });\n      }\n    } else {\n      setID(\"\");\n      alert(\"Username or password is incorrect.\");\n    } //Login.setPath(path);\n\n  }).catch(err => {\n    alert(\"Error.\");\n    console.log(err);\n  });\n}\nexport function updateUser(user) {\n  const {\n    _id,\n    firstname,\n    lastname,\n    username,\n    password,\n    usertype\n  } = user;\n\n  if (!_id) {\n    alert(\"must include an id\");\n    return;\n  }\n\n  if (!firstname || !lastname) {\n    alert(\"must include a first name or last name to update\");\n    return;\n  }\n\n  if (!username || !password) {\n    alert(\"Invalid username or password submitted\");\n    return;\n  }\n\n  const endpoint = BASE_URL + `/update-user-info/${_id}`; // return fetch query to update an author\n\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      _id,\n      firstname,\n      lastname,\n      username,\n      password,\n      usertype\n    })\n  }).then(res => window.location.reload(true));\n}\nexport function deleteUser(id) {\n  const endpoint = BASE_URL + '/delete-user';\n  fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id\n    })\n  }).then(res => window.location.reload(true));\n}\nexport function useUsers() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    getUsers().then(users => {\n      setUsers(users);\n      setLoading(false);\n    }).catch(e => {\n      console.log(e);\n      setError(e);\n      setLoading(false);\n    });\n  }, []);\n  return {\n    loading,\n    users,\n    error\n  };\n}\n\n_s(useUsers, \"zqOByeo7zg/EOj2YruBsAydOJzw=\");\n\nexport function getUserReceipt(id) {\n  const endpoint = BASE_URL + '/userpage/list-user-receipt/' + id;\n  return fetch(endpoint).then(res => {\n    return res.json();\n  });\n}\nexport function UserReceipt(id) {\n  _s2();\n\n  const [loading, setLoading] = useState(true);\n  const [receipts, setReceipts] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    getUserReceipt(id).then(receipts => {\n      setReceipts(receipts['receipts']);\n      setLoading(false);\n    }).catch(e => {\n      console.log(e);\n      setError(e);\n      setLoading(false);\n    });\n  }, []);\n  return {\n    loading,\n    receipts,\n    error\n  };\n} // Receipt api\n\n_s2(UserReceipt, \"3Xe8MRDRjF1OpsT01wdkd/h1T0M=\");\n\n_c = UserReceipt;\nexport function getReceipt() {\n  const endpoint = BASE_URL + '/get-receipt';\n  return fetch(endpoint).then(res => {\n    console.log(res);\n    return res.json();\n  });\n}\nexport function useReceipt() {\n  _s3();\n\n  const [loading, setLoading] = useState(true);\n  const [receipts, setReceipts] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    getReceipt().then(receipts => {\n      setReceipts(receipts);\n      setLoading(false);\n    }).catch(e => {\n      console.log(e);\n      setError(e);\n      setLoading(false);\n    });\n  }, []);\n  return {\n    loading,\n    receipts,\n    error\n  };\n}\n\n_s3(useReceipt, \"3Xe8MRDRjF1OpsT01wdkd/h1T0M=\");\n\nexport function updateReceipt(receipt) {\n  const {\n    _id,\n    category\n  } = receipt;\n\n  if (!_id) {\n    alert(\"must include an id\");\n    return;\n  }\n\n  if (!category) {\n    alert(\"must include a category to update\");\n    return;\n  }\n\n  const endpoint = BASE_URL + `/update-receipt`; // return fetch query to update an author\n\n  return fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      _id,\n      category\n    })\n  }).then(res => {\n    if (res.status === 400) {\n      alert(\"Update failed.\");\n    } else {\n      window.location.reload(true);\n    }\n  });\n}\nexport function deleteReceipt(id) {\n  const endpoint = BASE_URL + '/delete-survey';\n  fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      id\n    })\n  }).then(res => window.location.reload(true));\n}\nexport function deleteSurvey(id) {\n  const endpoint = BASE_URL + '/delete-survey';\n  fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username\n    })\n  }).then(res => window.location.reload(true));\n}\nexport function addReceipt(receipt) {\n  const {\n    buyerID,\n    shop,\n    description,\n    price,\n    category,\n    date\n  } = receipt;\n\n  if (!buyerID || !shop || !description || !price || !category || !date) {\n    alert(\"must include all fields\");\n    return;\n  }\n\n  const endpoint = BASE_URL + `/create-receipt`;\n  fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      buyerID,\n      shop,\n      description,\n      price,\n      category,\n      date\n    })\n  }).then(res => {\n    if (res.status === 400) {\n      alert(\"Cannot create this receipt.\");\n    } else {\n      window.location.reload(true);\n    }\n  });\n}\nexport function budget(query) {\n  const {\n    buyerID,\n    startDate,\n    endDate\n  } = query;\n  console.log(query);\n\n  if (!buyerID || !startDate || !endDate) {\n    alert(\"Please login from main page\");\n    return;\n  }\n\n  const endpoint = BASE_URL + '/userpage/list-user-receipt-bydate/' + buyerID + '/' + startDate + '/' + endDate;\n  return fetch(endpoint).then(res => {\n    console.log(res);\n    return res.json();\n  });\n}\nexport function createSurvey(state) {\n  const {\n    username,\n    usertype,\n    photo1,\n    photo2,\n    photo3,\n    photo4,\n    photo5,\n    photo6,\n    photo7,\n    photo8,\n    photo9\n  } = state;\n  console.log(state);\n  const endpoint = BASE_URL + '/submit-survey';\n  fetch(endpoint, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      usertype,\n      photo1,\n      photo2,\n      photo3,\n      photo4,\n      photo5,\n      photo6,\n      photo7,\n      photo8,\n      photo9\n    })\n  }).then(res => {\n    if (res.status === 400) {\n      alert(\"Cannot create this result.\");\n    } else {\n      window.location.reload(true);\n    }\n  });\n}\nexport function getSurvey() {\n  const endpoint = BASE_URL + '/get-Survey';\n  return fetch(endpoint).then(res => {\n    console.log(res);\n    return res.json();\n  });\n}\nexport function useSurvey() {\n  _s4();\n\n  const [loading, setLoading] = useState(true);\n  const [surveys, setSurveys] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    getSurvey().then(surveys => {\n      setSurveys(surveys);\n      setLoading(false);\n    }).catch(e => {\n      console.log(e);\n      setError(e);\n      setLoading(false);\n    });\n  }, []);\n  return {\n    loading,\n    surveys,\n    error\n  };\n}\n\n_s4(useSurvey, \"vlA2mPuarqINZc5Ku5O73/L8QRs=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"UserReceipt\");","map":{"version":3,"sources":["C:/Users/37199/Documents/INFO30005-project-master/src/api.js"],"names":["React","useState","useEffect","axios","setUsername","setID","getID","Userlogin","setUsertype","BASE_URL","getUsers","endpoint","fetch","then","res","console","log","json","getCertainUser","id","addUser","user","username","password","firstname","lastname","usertype","alert","method","headers","body","JSON","stringify","status","window","location","reload","register","e","lg","preventDefault","document","getElementById","value","request","post","resp","path","setState","redirectState","data","catch","err","login","length","userID","updateUser","_id","deleteUser","useUsers","loading","setLoading","users","setUsers","error","setError","getUserReceipt","UserReceipt","receipts","setReceipts","getReceipt","useReceipt","updateReceipt","receipt","category","deleteReceipt","deleteSurvey","addReceipt","buyerID","shop","description","price","date","budget","query","startDate","endDate","createSurvey","state","photo1","photo2","photo3","photo4","photo5","photo6","photo7","photo8","photo9","getSurvey","useSurvey","surveys","setSurveys"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,SAAnC,EAA6CC,WAA7C,QAA+D,0BAA/D,C,CAIA;AACA;;AACC,MAAMC,QAAQ,GAAG,uBAAjB;AAGD,OAAO,SAASC,QAAT,GAAoB;AACvB,QAAMC,QAAQ,GAAGF,QAAQ,GAAG,WAA5B;AACA,SAAOG,KAAK,CAACD,QAAD,CAAL,CAAgBE,IAAhB,CAAqBC,GAAG,IAAI;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAOA,GAAG,CAACG,IAAJ,EAAP;AACH,GAHM,CAAP;AAIH;AAED,OAAO,SAASC,cAAT,CAAwBC,EAAxB,EAA4B;AAC/B,QAAMR,QAAQ,GAAGF,QAAQ,GAAG,mBAAX,GAAiCU,EAAlD;AACA,SAAOP,KAAK,CAACD,QAAD,CAAL,CAAgBE,IAAhB,CAAqBC,GAAG,IAAI;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAOA,GAAG,CAACG,IAAJ,EAAP;AACH,GAHM,CAAP;AAKH;AAID,OAAO,SAASG,OAAT,CAAiBC,IAAjB,EAAuB;AAC1B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,SAAtB;AAAiCC,IAAAA,QAAjC;AAA2CC,IAAAA;AAA3C,MAAwDL,IAA9D;;AACA,MAAI,CAACC,QAAD,IAAa,CAACC,QAAd,IAA0B,CAACC,SAA3B,IAAwC,CAACC,QAAzC,IAAqD,CAACC,QAA1D,EAAoE;AAChEC,IAAAA,KAAK,CAAC,yBAAD,CAAL;AACA;AACH;;AAED,QAAMhB,QAAQ,GAAGF,QAAQ,GAAI,eAA7B;AAEAG,EAAAA,KAAK,CAACD,QAAD,EAAW;AAAEiB,IAAAA,MAAM,EAAE,MAAV;AAAkBC,IAAAA,OAAO,EAAE;AACnC,sBAAgB;AADmB,KAA3B;AAEZC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBV,MAAAA,QADiB;AAEjBC,MAAAA,QAFiB;AAGjBC,MAAAA,SAHiB;AAIjBC,MAAAA,QAJiB;AAKjBC,MAAAA;AALiB,KAAf;AAFM,GAAX,CAAL,CASKb,IATL,CASUC,GAAG,IAAI;AACT,QAAGA,GAAG,CAACmB,MAAJ,KAAe,GAAlB,EAAsB;AAClBN,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACH,KAFD,MAGI;AACEO,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB;AACL;AACJ,GAhBL;AAiBH;AAED,OAAO,SAASC,QAAT,CAAkBC,CAAlB,EAAqBC,EAArB,EAAyB;AAC5BD,EAAAA,CAAC,CAACE,cAAF;AACA,QAAMlB,QAAQ,GAAGmB,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAArD;AACA,QAAMpB,QAAQ,GAAGkB,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAArD;AACA,QAAMnB,SAAS,GAAGiB,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAAvD;AACA,QAAMlB,QAAQ,GAAGgB,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAArD;AACA,QAAMjB,QAAQ,GAAGe,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAArD;AAKA,MAAIC,OAAO,GAAG;AACVtB,IAAAA,QAAQ,EAAEA,QADA;AAEVC,IAAAA,QAAQ,EAAEA,QAFA;AAGVC,IAAAA,SAAS,EAAEA,SAHD;AAIVC,IAAAA,QAAQ,EAAEA,QAJA;;AAKV;AACAC,IAAAA,QAAQ,EAAEA;AANA,GAAd;AASA,QAAMf,QAAQ,GAAGF,QAAQ,GAAI,eAA7B;AAEAN,EAAAA,KAAK,CAAC0C,IAAN,CAAWlC,QAAX,EAAqBiC,OAArB,EACK/B,IADL,CACUiC,IAAI,IAAI;AACV/B,IAAAA,OAAO,CAACC,GAAR,CAAY8B,IAAZ;;AACA,QAAGA,IAAI,CAACb,MAAL,KAAgB,GAAnB,EAAwB;AACpBN,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACA,UAAIoB,IAAI,GAAG,WAAX;AACAR,MAAAA,EAAE,CAACS,QAAH,CAAY;AAACC,QAAAA,aAAa,EAAE,IAAhB;AAAsBF,QAAAA,IAAI,EAACA;AAA3B,OAAZ;AACH,KAJD,MAIK;AACD1C,MAAAA,KAAK,CAACyC,IAAI,CAACI,IAAN,CAAL;AACA9C,MAAAA,WAAW,CAACkB,QAAD,CAAX;AACAd,MAAAA,WAAW,CAACkB,QAAD,CAAX;AACAnB,MAAAA,SAAS;AACT,UAAIwC,IAAI,GAAG,mBAAmBD,IAAI,CAACI,IAAnC;AACAX,MAAAA,EAAE,CAACS,QAAH,CAAY;AAACC,QAAAA,aAAa,EAAE,IAAhB;AAAsBF,QAAAA,IAAI,EAACA;AAA3B,OAAZ;AACH;AACJ,GAfL,EAeOI,KAfP,CAeaC,GAAG,IAAI;AAChBzB,IAAAA,KAAK,CAAC,0CAAD,CAAL;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYoC,GAAZ;AACC,GAlBL;AAmBH;AAED,OAAO,SAASC,KAAT,CAAef,CAAf,EAAkBC,EAAlB,EAAsB;AACzB,QAAM5B,QAAQ,GAAGF,QAAQ,GAAG,aAA5B;AACA6B,EAAAA,CAAC,CAACE,cAAF;AACA,MAAII,OAAO,GAAG;AACVtB,IAAAA,QAAQ,EAAEmB,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KADpC;AAEVpB,IAAAA,QAAQ,EAAEkB,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC;AAFpC,GAAd,CAHyB,CAQ5B;;AACGxC,EAAAA,KAAK,CAAC0C,IAAN,CAAWlC,QAAX,EAAqBiC,OAArB,EACK/B,IADL,CACUiC,IAAI,IAAI;AACV,QAAGA,IAAI,CAACI,IAAL,CAAUI,MAAV,GAAmB,CAAtB,EAAyB;AACrB,UAAIC,MAAM,GAAGT,IAAI,CAACI,IAAL,CAAU,CAAV,EAAa,KAAb,CAAb;AACA,UAAI5B,QAAQ,GAAGwB,IAAI,CAACI,IAAL,CAAU,CAAV,EAAa,UAAb,CAAf;AACA,UAAIxB,QAAQ,GAAGoB,IAAI,CAACI,IAAL,CAAU,CAAV,EAAa,UAAb,CAAf;AACA7C,MAAAA,KAAK,CAACkD,MAAD,CAAL;AACAnD,MAAAA,WAAW,CAACkB,QAAD,CAAX;AACAd,MAAAA,WAAW,CAACkB,QAAD,CAAX;AACAnB,MAAAA,SAAS;AACTQ,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,EAAjB;;AACA,UAAGgB,QAAQ,KAAK,OAAhB,EAAwB;AACpB,YAAIyB,IAAI,GAAG,QAAX;AACAR,QAAAA,EAAE,CAACS,QAAH,CAAY;AAACC,UAAAA,aAAa,EAAE,IAAhB;AAAsBF,UAAAA,IAAI,EAAEA;AAA5B,SAAZ;AACH,OAHD,MAGK;AACD,YAAIA,IAAI,GAAG,mBAAmBQ,MAA9B;AACAhB,QAAAA,EAAE,CAACS,QAAH,CAAY;AAACC,UAAAA,aAAa,EAAE,IAAhB;AAAsBF,UAAAA,IAAI,EAAEA;AAA5B,SAAZ;AACH;AACJ,KAhBD,MAiBK;AACD1C,MAAAA,KAAK,CAAC,EAAD,CAAL;AACAsB,MAAAA,KAAK,CAAC,oCAAD,CAAL;AACH,KArBS,CAsBV;;AACH,GAxBL,EAyBKwB,KAzBL,CAyBWC,GAAG,IAAI;AACVzB,IAAAA,KAAK,CAAC,QAAD,CAAL;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYoC,GAAZ;AACH,GA5BL;AA6BH;AAED,OAAO,SAASI,UAAT,CAAoBnC,IAApB,EAA0B;AAC7B,QAAM;AAAEoC,IAAAA,GAAF;AAAOjC,IAAAA,SAAP;AAAkBC,IAAAA,QAAlB;AAA4BH,IAAAA,QAA5B;AAAsCC,IAAAA,QAAtC;AAAgDG,IAAAA;AAAhD,MAA6DL,IAAnE;;AACA,MAAI,CAACoC,GAAL,EAAU;AACN9B,IAAAA,KAAK,CAAC,oBAAD,CAAL;AACA;AACH;;AACD,MAAI,CAACH,SAAD,IAAc,CAACC,QAAnB,EAA6B;AACzBE,IAAAA,KAAK,CAAC,kDAAD,CAAL;AACA;AACH;;AACD,MAAI,CAACL,QAAD,IAAa,CAACC,QAAlB,EAA4B;AACxBI,IAAAA,KAAK,CAAC,wCAAD,CAAL;AACA;AACH;;AAED,QAAMhB,QAAQ,GAAGF,QAAQ,GAAI,qBAAoBgD,GAAI,EAArD,CAf6B,CAiB7B;;AACA,SAAO7C,KAAK,CAACD,QAAD,EAAW;AAAEiB,IAAAA,MAAM,EAAE,MAAV;AAAkBC,IAAAA,OAAO,EAAE;AAC1C,sBAAgB;AAD0B,KAA3B;AAEnBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEyB,MAAAA,GAAF;AACjBjC,MAAAA,SADiB;AAEjBC,MAAAA,QAFiB;AAGjBH,MAAAA,QAHiB;AAIjBC,MAAAA,QAJiB;AAKrBG,MAAAA;AALqB,KAAf;AAFa,GAAX,CAAL,CASFb,IATE,CASGC,GAAG,IAAIoB,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB,CATV,CAAP;AAWH;AAED,OAAO,SAASsB,UAAT,CAAoBvC,EAApB,EAAwB;AAC3B,QAAMR,QAAQ,GAAGF,QAAQ,GAAG,cAA5B;AAEAG,EAAAA,KAAK,CAACD,QAAD,EAAW;AAAEiB,IAAAA,MAAM,EAAE,MAAV;AAAkBC,IAAAA,OAAO,EAAE;AACnC,sBAAgB;AADmB,KAA3B;AAEZC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEb,MAAAA;AAAF,KAAf;AAFM,GAAX,CAAL,CAIKN,IAJL,CAIUC,GAAG,IAAIoB,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB,CAJjB;AAKH;AAED,OAAO,SAASuB,QAAT,GAAoB;AAAA;;AACvB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB5D,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAAC6D,KAAD,EAAQC,QAAR,IAAoB9D,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC+D,KAAD,EAAQC,QAAR,IAAoBhE,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ,GACHG,IADL,CACUiD,KAAK,IAAI;AACXC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAJL,EAKKV,KALL,CAKWb,CAAC,IAAI;AACRvB,MAAAA,OAAO,CAACC,GAAR,CAAYsB,CAAZ;AACA2B,MAAAA,QAAQ,CAAC3B,CAAD,CAAR;AACAuB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KATL;AAUH,GAXQ,EAWN,EAXM,CAAT;AAaA,SAAO;AACHD,IAAAA,OADG;AAEHE,IAAAA,KAFG;AAGHE,IAAAA;AAHG,GAAP;AAKH;;GAvBeL,Q;;AAyBhB,OAAO,SAASO,cAAT,CAAwB/C,EAAxB,EAA4B;AAE/B,QAAMR,QAAQ,GAAGF,QAAQ,GAAE,8BAAV,GAA2CU,EAA5D;AAEA,SAAOP,KAAK,CAACD,QAAD,CAAL,CAAgBE,IAAhB,CAAqBC,GAAG,IAAI;AAC/B,WAAOA,GAAG,CAACG,IAAJ,EAAP;AACH,GAFM,CAAP;AAGH;AAED,OAAO,SAASkD,WAAT,CAAqBhD,EAArB,EAAyB;AAAA;;AAC5B,QAAM,CAACyC,OAAD,EAAUC,UAAV,IAAwB5D,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACmE,QAAD,EAAWC,WAAX,IAA0BpE,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC+D,KAAD,EAAQC,QAAR,IAAoBhE,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZgE,IAAAA,cAAc,CAAC/C,EAAD,CAAd,CACKN,IADL,CACUuD,QAAQ,IAAI;AACdC,MAAAA,WAAW,CAACD,QAAQ,CAAC,UAAD,CAAT,CAAX;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAJL,EAKKV,KALL,CAKWb,CAAC,IAAI;AACRvB,MAAAA,OAAO,CAACC,GAAR,CAAYsB,CAAZ;AACA2B,MAAAA,QAAQ,CAAC3B,CAAD,CAAR;AACAuB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KATL;AAUH,GAXQ,EAWN,EAXM,CAAT;AAaA,SAAO;AACHD,IAAAA,OADG;AAEHQ,IAAAA,QAFG;AAGHJ,IAAAA;AAHG,GAAP;AAKH,C,CAED;;IAzBgBG,W;;KAAAA,W;AA0BhB,OAAO,SAASG,UAAT,GAAsB;AACzB,QAAM3D,QAAQ,GAAGF,QAAQ,GAAG,cAA5B;AACA,SAAOG,KAAK,CAACD,QAAD,CAAL,CAAgBE,IAAhB,CAAqBC,GAAG,IAAI;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAOA,GAAG,CAACG,IAAJ,EAAP;AACH,GAHM,CAAP;AAIH;AAED,OAAO,SAASsD,UAAT,GAAsB;AAAA;;AACzB,QAAM,CAACX,OAAD,EAAUC,UAAV,IAAwB5D,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACmE,QAAD,EAAWC,WAAX,IAA0BpE,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC+D,KAAD,EAAQC,QAAR,IAAoBhE,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZoE,IAAAA,UAAU,GACLzD,IADL,CACUuD,QAAQ,IAAI;AACdC,MAAAA,WAAW,CAACD,QAAD,CAAX;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAJL,EAKKV,KALL,CAKWb,CAAC,IAAI;AACRvB,MAAAA,OAAO,CAACC,GAAR,CAAYsB,CAAZ;AACA2B,MAAAA,QAAQ,CAAC3B,CAAD,CAAR;AACAuB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KATL;AAUH,GAXQ,EAWN,EAXM,CAAT;AAaA,SAAO;AACHD,IAAAA,OADG;AAEHQ,IAAAA,QAFG;AAGHJ,IAAAA;AAHG,GAAP;AAKH;;IAvBeO,U;;AAyBhB,OAAO,SAASC,aAAT,CAAuBC,OAAvB,EAAgC;AACnC,QAAM;AAAEhB,IAAAA,GAAF;AAAOiB,IAAAA;AAAP,MAAoBD,OAA1B;;AACA,MAAI,CAAChB,GAAL,EAAU;AACN9B,IAAAA,KAAK,CAAC,oBAAD,CAAL;AACA;AACH;;AACD,MAAI,CAAC+C,QAAL,EAAe;AACX/C,IAAAA,KAAK,CAAC,mCAAD,CAAL;AACA;AACH;;AAED,QAAMhB,QAAQ,GAAGF,QAAQ,GAAI,iBAA7B,CAXmC,CAanC;;AACA,SAAOG,KAAK,CAACD,QAAD,EAAW;AAAEiB,IAAAA,MAAM,EAAE,MAAV;AAAkBC,IAAAA,OAAO,EAAE;AAC1C,sBAAgB;AAD0B,KAA3B;AAEnBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEyB,MAAAA,GAAF;AACjBiB,MAAAA;AADiB,KAAf;AAFa,GAAX,CAAL,CAKF7D,IALE,CAKGC,GAAG,IAAI;AACT,QAAGA,GAAG,CAACmB,MAAJ,KAAe,GAAlB,EAAsB;AAClBN,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACH,KAFD,MAEK;AACDO,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB;AACH;AACJ,GAXE,CAAP;AAYH;AAED,OAAO,SAASuC,aAAT,CAAuBxD,EAAvB,EAA2B;AAC9B,QAAMR,QAAQ,GAAGF,QAAQ,GAAG,gBAA5B;AAEAG,EAAAA,KAAK,CAACD,QAAD,EAAW;AAAEiB,IAAAA,MAAM,EAAE,MAAV;AAAkBC,IAAAA,OAAO,EAAE;AACnC,sBAAgB;AADmB,KAA3B;AAEZC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEb,MAAAA;AAAF,KAAf;AAFM,GAAX,CAAL,CAIKN,IAJL,CAIUC,GAAG,IAAIoB,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB,CAJjB;AAKH;AAED,OAAO,SAASwC,YAAT,CAAsBzD,EAAtB,EAA0B;AAC7B,QAAMR,QAAQ,GAAGF,QAAQ,GAAG,gBAA5B;AAEAG,EAAAA,KAAK,CAACD,QAAD,EAAW;AAAEiB,IAAAA,MAAM,EAAE,MAAV;AAAkBC,IAAAA,OAAO,EAAE;AACnC,sBAAgB;AADmB,KAA3B;AAEZC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEV,MAAAA;AAAF,KAAf;AAFM,GAAX,CAAL,CAIKT,IAJL,CAIUC,GAAG,IAAIoB,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB,CAJjB;AAKH;AAGD,OAAO,SAASyC,UAAT,CAAoBJ,OAApB,EAA6B;AAChC,QAAM;AAAEK,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA,WAAjB;AAA8BC,IAAAA,KAA9B;AAAqCP,IAAAA,QAArC;AAA+CQ,IAAAA;AAA/C,MAAwDT,OAA9D;;AACA,MAAI,CAACK,OAAD,IAAY,CAACC,IAAb,IAAqB,CAACC,WAAtB,IAAqC,CAACC,KAAtC,IAA+C,CAACP,QAAhD,IAA2D,CAACQ,IAAhE,EAAsE;AAClEvD,IAAAA,KAAK,CAAC,yBAAD,CAAL;AACA;AACH;;AAED,QAAMhB,QAAQ,GAAGF,QAAQ,GAAI,iBAA7B;AAEAG,EAAAA,KAAK,CAACD,QAAD,EAAW;AAAEiB,IAAAA,MAAM,EAAE,MAAV;AAAkBC,IAAAA,OAAO,EAAE;AACnC,sBAAgB;AADmB,KAA3B;AAEZC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB8C,MAAAA,OADiB;AAEjBC,MAAAA,IAFiB;AAGjBC,MAAAA,WAHiB;AAIjBC,MAAAA,KAJiB;AAKjBP,MAAAA,QALiB;AAMjBQ,MAAAA;AANiB,KAAf;AAFM,GAAX,CAAL,CAWKrE,IAXL,CAWUC,GAAG,IAAI;AACT,QAAGA,GAAG,CAACmB,MAAJ,KAAe,GAAlB,EAAsB;AAClBN,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACH,KAFD,MAGI;AACAO,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB;AACH;AACJ,GAlBL;AAmBH;AAED,OAAO,SAAS+C,MAAT,CAAgBC,KAAhB,EAAsB;AACzB,QAAM;AAAEN,IAAAA,OAAF;AAAWO,IAAAA,SAAX;AAAsBC,IAAAA;AAAtB,MAAkCF,KAAxC;AACArE,EAAAA,OAAO,CAACC,GAAR,CAAYoE,KAAZ;;AACA,MAAI,CAACN,OAAD,IAAU,CAACO,SAAX,IAAwB,CAACC,OAA7B,EAAsC;AAClC3D,IAAAA,KAAK,CAAC,6BAAD,CAAL;AACA;AACH;;AAED,QAAMhB,QAAQ,GAAGF,QAAQ,GAAG,qCAAX,GAAmDqE,OAAnD,GAA6D,GAA7D,GAAmEO,SAAnE,GAA+E,GAA/E,GAAqFC,OAAtG;AAEA,SAAO1E,KAAK,CAACD,QAAD,CAAL,CACFE,IADE,CACGC,GAAG,IAAI;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAOA,GAAG,CAACG,IAAJ,EAAP;AAAkB,GAHnB,CAAP;AAIH;AAID,OAAO,SAASsE,YAAT,CAAsBC,KAAtB,EAA6B;AAChC,QAAM;AAAElE,IAAAA,QAAF;AAAWI,IAAAA,QAAX;AAAoB+D,IAAAA,MAApB;AAA2BC,IAAAA,MAA3B;AAAkCC,IAAAA,MAAlC;AAAyCC,IAAAA,MAAzC;AAAgDC,IAAAA,MAAhD;AAAuDC,IAAAA,MAAvD;AAA8DC,IAAAA,MAA9D;AAAqEC,IAAAA,MAArE;AAA4EC,IAAAA;AAA5E,MAAuFT,KAA7F;AACAzE,EAAAA,OAAO,CAACC,GAAR,CAAYwE,KAAZ;AACA,QAAM7E,QAAQ,GAAGF,QAAQ,GAAG,gBAA5B;AAEAG,EAAAA,KAAK,CAACD,QAAD,EAAW;AAAEiB,IAAAA,MAAM,EAAE,MAAV;AAAkBC,IAAAA,OAAO,EAAE;AACnC,sBAAgB;AADmB,KAA3B;AAEZC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAGV,MAAAA,QAAH;AAAYI,MAAAA,QAAZ;AAAqB+D,MAAAA,MAArB;AAA4BC,MAAAA,MAA5B;AAAmCC,MAAAA,MAAnC;AAA0CC,MAAAA,MAA1C;AAAiDC,MAAAA,MAAjD;AAAwDC,MAAAA,MAAxD;AAA+DC,MAAAA,MAA/D;AAAsEC,MAAAA,MAAtE;AAA6EC,MAAAA;AAA7E,KAAf;AAFM,GAAX,CAAL,CAIKpF,IAJL,CAIUC,GAAG,IAAI;AACT,QAAGA,GAAG,CAACmB,MAAJ,KAAe,GAAlB,EAAsB;AAClBN,MAAAA,KAAK,CAAC,4BAAD,CAAL;AACH,KAFD,MAGI;AACAO,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB;AACH;AACJ,GAXL;AAYH;AAED,OAAO,SAAS8D,SAAT,GAAqB;AACxB,QAAMvF,QAAQ,GAAGF,QAAQ,GAAG,aAA5B;AACA,SAAOG,KAAK,CAACD,QAAD,CAAL,CAAgBE,IAAhB,CAAqBC,GAAG,IAAI;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAOA,GAAG,CAACG,IAAJ,EAAP;AACH,GAHM,CAAP;AAIH;AAED,OAAO,SAASkF,SAAT,GAAqB;AAAA;;AACxB,QAAM,CAACvC,OAAD,EAAUC,UAAV,IAAwB5D,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACmG,OAAD,EAAUC,UAAV,IAAwBpG,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC+D,KAAD,EAAQC,QAAR,IAAoBhE,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZgG,IAAAA,SAAS,GACJrF,IADL,CACUuF,OAAO,IAAI;AACbC,MAAAA,UAAU,CAACD,OAAD,CAAV;AACAvC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAJL,EAKKV,KALL,CAKWb,CAAC,IAAI;AACRvB,MAAAA,OAAO,CAACC,GAAR,CAAYsB,CAAZ;AACA2B,MAAAA,QAAQ,CAAC3B,CAAD,CAAR;AACAuB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KATL;AAUH,GAXQ,EAWN,EAXM,CAAT;AAaA,SAAO;AACHD,IAAAA,OADG;AAEHwC,IAAAA,OAFG;AAGHpC,IAAAA;AAHG,GAAP;AAKH;;IAvBemC,S","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {setUsername, setID, getID, Userlogin,setUsertype} from \"./components/CurrentUser\"\n\n\n\n// TODO - update this to be your url\n//const BASE_URL = \"https://digiceipttest.herokuapp.com\";\n const BASE_URL = \"http://localhost:9000\";\n\n\nexport function getUsers() {\n    const endpoint = BASE_URL + '/get-user';\n    return fetch(endpoint).then(res => {\n        console.log(res);\n        return res.json();\n    });\n}\n\nexport function getCertainUser(id) {\n    const endpoint = BASE_URL + '/find-given-user/' + id;\n    return fetch(endpoint).then(res => {\n        console.log(res);\n        return res.json();\n    });\n\n}\n\n\n\nexport function addUser(user) {\n    const { username, password, firstname, lastname, usertype } = user;\n    if (!username || !password || !firstname || !lastname || !usertype) {\n        alert(\"must include all fields\");\n        return;\n    }\n\n    const endpoint = BASE_URL + `/insert-user/`;\n\n    fetch(endpoint, { method: \"POST\", headers: {\n            \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n            username,\n            password,\n            firstname,\n            lastname,\n            usertype})\n    })\n        .then(res => {\n            if(res.status === 400){\n                alert(\"Username exists!\");\n            }\n            else{\n                  window.location.reload(true)\n            }\n        });\n}\n\nexport function register(e, lg) {\n    e.preventDefault();\n    const username = document.getElementById('Username').value;\n    const password = document.getElementById('password').value;\n    const firstname = document.getElementById('firstname').value;\n    const lastname = document.getElementById('lastname').value;\n    const usertype = document.getElementById('usertype').value;\n\n\n\n\n    let request = {\n        username: username,\n        password: password,\n        firstname: firstname,\n        lastname: lastname,\n        /* 1 */\n        usertype: usertype\n    };\n\n    const endpoint = BASE_URL + `/insert-user/`;\n\n    axios.post(endpoint, request)\n        .then(resp => {\n            console.log(resp)\n            if(resp.status === 400) {\n                alert(\"Username exists!\");\n                let path = \"/register\";\n                lg.setState({redirectState: true, path:path})\n            }else{\n                setID(resp.data);\n                setUsername(username);\n                setUsertype(usertype);\n                Userlogin();\n                let path = '/personalpage/' + resp.data;\n                lg.setState({redirectState: true, path:path})\n            }\n        }).catch(err => {\n        alert(\"Username exists! Please change username.\");\n        console.log(err);\n        })\n}\n\nexport function login(e, lg) {\n    const endpoint = BASE_URL + '/user-login';\n    e.preventDefault();\n    let request = {\n        username: document.getElementById('Username').value,\n        password: document.getElementById('password').value,\n\n    };\n //   alert(request.username + request.password);\n    axios.post(endpoint, request)\n        .then(resp => {\n            if(resp.data.length > 0) {\n                let userID = resp.data[0]['_id'];\n                let username = resp.data[0]['username'];\n                let usertype = resp.data[0]['usertype'];\n                setID(userID);\n                setUsername(username);\n                setUsertype(usertype)\n                Userlogin();\n                console.log(getID())\n                if(username === 'admin'){\n                    let path = '/users'\n                    lg.setState({redirectState: true, path: path});\n                }else{\n                    let path = '/personalpage/' + userID;\n                    lg.setState({redirectState: true, path: path});\n                }\n            }\n            else {\n                setID(\"\");\n                alert(\"Username or password is incorrect.\")\n            }\n            //Login.setPath(path);\n        })\n        .catch(err => {\n            alert(\"Error.\");\n            console.log(err);\n        })\n}\n\nexport function updateUser(user) {\n    const { _id, firstname, lastname, username, password, usertype } = user;\n    if (!_id) {\n        alert(\"must include an id\");\n        return;\n    }\n    if (!firstname || !lastname) {\n        alert(\"must include a first name or last name to update\");\n        return;\n    }\n    if (!username || !password) {\n        alert(\"Invalid username or password submitted\");\n        return;\n    }\n\n    const endpoint = BASE_URL + `/update-user-info/${_id}`;\n\n    // return fetch query to update an author\n    return fetch(endpoint, { method: \"POST\", headers: {\n            \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ _id,\n            firstname,\n            lastname,\n            username,\n            password,\n        usertype})\n    })\n        .then(res => window.location.reload(true));\n\n}\n\nexport function deleteUser(id) {\n    const endpoint = BASE_URL + '/delete-user';\n\n    fetch(endpoint, { method: \"POST\", headers: {\n            \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ id })\n    })\n        .then(res => window.location.reload(true));\n}\n\nexport function useUsers() {\n    const [loading, setLoading] = useState(true);\n    const [users, setUsers] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        getUsers()\n            .then(users => {\n                setUsers(users);\n                setLoading(false);\n            })\n            .catch(e => {\n                console.log(e);\n                setError(e);\n                setLoading(false);\n            });\n    }, []);\n\n    return {\n        loading,\n        users,\n        error\n    };\n}\n\nexport function getUserReceipt(id) {\n\n    const endpoint = BASE_URL +'/userpage/list-user-receipt/' + id;\n\n    return fetch(endpoint).then(res => {\n        return res.json();\n    });\n}\n\nexport function UserReceipt(id) {\n    const [loading, setLoading] = useState(true);\n    const [receipts, setReceipts] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        getUserReceipt(id)\n            .then(receipts => {\n                setReceipts(receipts['receipts']);\n                setLoading(false);\n            })\n            .catch(e => {\n                console.log(e);\n                setError(e);\n                setLoading(false);\n            });\n    }, []);\n\n    return {\n        loading,\n        receipts,\n        error\n    };\n}\n\n// Receipt api\nexport function getReceipt() {\n    const endpoint = BASE_URL + '/get-receipt';\n    return fetch(endpoint).then(res => {\n        console.log(res);\n        return res.json();\n    });\n}\n\nexport function useReceipt() {\n    const [loading, setLoading] = useState(true);\n    const [receipts, setReceipts] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        getReceipt()\n            .then(receipts => {\n                setReceipts(receipts);\n                setLoading(false);\n            })\n            .catch(e => {\n                console.log(e);\n                setError(e);\n                setLoading(false);\n            });\n    }, []);\n\n    return {\n        loading,\n        receipts,\n        error\n    };\n}\n\nexport function updateReceipt(receipt) {\n    const { _id, category } = receipt;\n    if (!_id) {\n        alert(\"must include an id\");\n        return;\n    }\n    if (!category) {\n        alert(\"must include a category to update\");\n        return;\n    }\n\n    const endpoint = BASE_URL + `/update-receipt`;\n\n    // return fetch query to update an author\n    return fetch(endpoint, { method: \"POST\", headers: {\n            \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ _id,\n            category })\n    })\n        .then(res => {\n            if(res.status === 400){\n                alert(\"Update failed.\")\n            }else{\n                window.location.reload(true);\n            }\n        });\n}\n\nexport function deleteReceipt(id) {\n    const endpoint = BASE_URL + '/delete-survey';\n\n    fetch(endpoint, { method: \"POST\", headers: {\n            \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ id })\n    })\n        .then(res => window.location.reload(true));\n}\n\nexport function deleteSurvey(id) {\n    const endpoint = BASE_URL + '/delete-survey';\n\n    fetch(endpoint, { method: \"POST\", headers: {\n            \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ username })\n    })\n        .then(res => window.location.reload(true));\n}\n\n\nexport function addReceipt(receipt) {\n    const { buyerID, shop, description, price, category, date } = receipt;\n    if (!buyerID || !shop || !description || !price || !category|| !date) {\n        alert(\"must include all fields\");\n        return;\n    }\n\n    const endpoint = BASE_URL + `/create-receipt`;\n\n    fetch(endpoint, { method: \"POST\", headers: {\n            \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n            buyerID,\n            shop,\n            description,\n            price,\n            category,\n            date\n        })\n    })\n        .then(res => {\n            if(res.status === 400){\n                alert(\"Cannot create this receipt.\");\n            }\n            else{\n                window.location.reload(true)\n            }\n        });\n}\n\nexport function budget(query){\n    const { buyerID, startDate, endDate } = query;\n    console.log(query);\n    if (!buyerID||!startDate || !endDate) {\n        alert(\"Please login from main page\");\n        return;\n    }\n\n    const endpoint = BASE_URL + '/userpage/list-user-receipt-bydate/' + buyerID + '/' + startDate + '/' + endDate;\n\n    return fetch(endpoint)\n        .then(res => {\n            console.log(res);\n            return res.json()});\n}\n\n\n\nexport function createSurvey(state) {\n    const { username,usertype,photo1,photo2,photo3,photo4,photo5,photo6,photo7,photo8,photo9 } = state;\n    console.log(state);\n    const endpoint = BASE_URL + '/submit-survey';\n\n    fetch(endpoint, { method: \"POST\", headers: {\n            \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({  username,usertype,photo1,photo2,photo3,photo4,photo5,photo6,photo7,photo8,photo9 })\n    })\n        .then(res => {\n            if(res.status === 400){\n                alert(\"Cannot create this result.\");\n            }\n            else{\n                window.location.reload(true)\n            }\n        });\n}\n\nexport function getSurvey() {\n    const endpoint = BASE_URL + '/get-Survey';\n    return fetch(endpoint).then(res => {\n        console.log(res);\n        return res.json();\n    });\n}\n\nexport function useSurvey() {\n    const [loading, setLoading] = useState(true);\n    const [surveys, setSurveys] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        getSurvey()\n            .then(surveys => {\n                setSurveys(surveys);\n                setLoading(false);\n            })\n            .catch(e => {\n                console.log(e);\n                setError(e);\n                setLoading(false);\n            });\n    }, []);\n\n    return {\n        loading,\n        surveys,\n        error\n    };\n}\n"]},"metadata":{},"sourceType":"module"}