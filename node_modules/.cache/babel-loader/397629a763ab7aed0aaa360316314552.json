{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\37199\\\\Documents\\\\INFO30005-project-master\\\\src\\\\pages\\\\Receipts.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useReceipt, updateReceipt, deleteReceipt, useSurvey } from \"../api\";\nimport Button from \"../components/Button\";\nimport AddReceipt from \"../components/AddReceipt\";\nimport AddSurvey from \"../pages/PersonalReceipts\";\nimport '../styles/Users.css';\nimport { ReceiptTable } from \"../components/ReceiptTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Receipts() {\n  _s();\n\n  const {\n    loading,\n    surveys,\n    error\n  } = useSurvey();\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Something went wrong: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  } // use this to make sure you are getting the right data\n\n\n  console.log(surveys); // Display a list of the receipts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Survey Result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReceiptTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Receipts, \"cZJ4xhpkbKUBM5moWD9b9q+JuJw=\", false, function () {\n  return [useSurvey];\n});\n\n_c = Receipts;\nexport function Receipt(receipt) {\n  _s2();\n\n  const {\n    _id\n  } = receipt;\n  const [showUpdate, setShowUpdate] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `user user-${_id}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn\",\n        onClick: () => setShowUpdate(!showUpdate),\n        children: showUpdate ? \"-\" : \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReceiptExtended, { ...receipt,\n      showUpdate: showUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, _id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Receipt, \"HbiMvtGSFu8Q4Sn89C87h6pKVSE=\");\n\n_c2 = Receipt;\nexport function ReceiptExtended(props) {\n  _s3();\n\n  const {\n    _id,\n    category,\n    showUpdate\n  } = props;\n  const [id_input, setId] = useState(_id);\n  const [category_input, setCategory] = useState(category);\n\n  function onSubmit() {\n    //call upate receipt function\n    updateReceipt({\n      _id: id_input,\n      category: category_input\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `author-expand ${showUpdate ? \"show\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"category_input\",\n        value: category_input,\n        onChange: event => {\n          setCategory(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-warning\",\n        onClick: onSubmit,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-danger\",\n        onClick: () => deleteReceipt(_id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(ReceiptExtended, \"U7GBIFJ/a3t9dkE+COzmJy8t01E=\");\n\n_c3 = ReceiptExtended;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Receipts\");\n$RefreshReg$(_c2, \"Receipt\");\n$RefreshReg$(_c3, \"ReceiptExtended\");","map":{"version":3,"sources":["C:/Users/37199/Documents/INFO30005-project-master/src/pages/Receipts.js"],"names":["React","useState","useReceipt","updateReceipt","deleteReceipt","useSurvey","Button","AddReceipt","AddSurvey","ReceiptTable","Receipts","loading","surveys","error","message","console","log","Receipt","receipt","_id","showUpdate","setShowUpdate","ReceiptExtended","props","category","id_input","setId","category_input","setCategory","onSubmit","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {useReceipt, updateReceipt, deleteReceipt, useSurvey} from \"../api\";\n\nimport Button from \"../components/Button\";\nimport AddReceipt from \"../components/AddReceipt\";\nimport AddSurvey from \"../pages/PersonalReceipts\";\nimport '../styles/Users.css';\nimport {ReceiptTable} from \"../components/ReceiptTable\";\nexport default function Receipts() {\n    const { loading, surveys, error } = useSurvey();\n    if (loading) {\n        return <p>Loading...</p>;\n    }\n    if (error) {\n        return <p>Something went wrong: {error.message}</p>;\n    }\n\n    // use this to make sure you are getting the right data\n    console.log(surveys);\n\n    // Display a list of the receipts\n    return (\n        <div>\n            <h1>Survey Result</h1>\n            <ReceiptTable/>\n        </div>\n    );\n}\n\nexport function Receipt(receipt) {\n    const { _id } = receipt;\n    const [showUpdate, setShowUpdate] = useState(false);\n\n    return (\n        <div className={`user user-${_id}`} key={_id}>\n            <div className=\"info\">\n                <Button className={\"btn\"} onClick={() => setShowUpdate(!showUpdate)}>\n                    {showUpdate ? \"-\" : \"+\"}\n                </Button>\n            </div>\n            <ReceiptExtended {...receipt} showUpdate={showUpdate} />\n        </div>\n    );\n}\n\nexport function ReceiptExtended(props) {\n    const { _id, category, showUpdate } = props;\n\n    const [id_input, setId] = useState(_id);\n    const [category_input, setCategory] = useState(category);\n\n    function onSubmit() {\n        //call upate receipt function\n        updateReceipt({\n            _id: id_input,\n            category: category_input\n        });\n    }\n\n    return (\n        <div className={`author-expand ${showUpdate ? \"show\" : \"\"}`}>\n            <form>\n                {/* TODO - add value and onChange properties to inputs */}\n                <input type=\"text\" name=\"category_input\" value = {category_input} onChange={event => { setCategory(event.target.value);}}/>\n                <Button className={\"btn-warning\"} onClick={onSubmit}>\n                    Update\n                </Button>\n                <Button className={\"btn-danger\"} onClick={() => deleteReceipt(_id)}>\n                    Delete\n                </Button>\n            </form>\n\n        </div>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}