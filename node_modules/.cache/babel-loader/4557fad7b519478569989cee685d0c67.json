{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\37199\\\\Documents\\\\INFO30005-project-master\\\\src\\\\pages\\\\ExpenseCalculator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { UserReceipt, updateReceipt, deleteReceipt, budget } from \"../api\";\nimport AddReceiptUserpage from \"../components/AddReceiptUserpage\";\nimport Button from \"../components/Button\";\nimport { Table, Tr } from \"styled-table-component\";\nimport CustomizedSelects from \"../components/selectBox\";\nimport \"../styles/styles.css\";\nimport { getID, getUsername, UserLoginState } from \"../components/CurrentUser\";\nimport Login from \"../components/Login\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExpenseCalculator() {\n  _s();\n\n  let buyerID = getID();\n\n  if (buyerID === \"personalpage\") {\n    buyerID = \"\";\n  }\n\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [receipts, setReceipts] = useState([]);\n  let spending = 0;\n\n  function onSubmit() {\n    budget({\n      buyerID,\n      startDate,\n      endDate\n    }).then(res => {\n      if (res != null) {\n        setReceipts(res);\n        setLoading(false);\n      }\n    });\n  }\n\n  const CalcSpending = function () {\n    if (receipts.length > 0) {\n      let tempSpending = 0;\n\n      for (let i = 0; i < receipts.length; i++) {\n        tempSpending += receipts[i]['Price'];\n      }\n\n      return tempSpending;\n    }\n  };\n\n  if (UserLoginState() === 'false') {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/signin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (receipts.length > 0) {\n    spending = CalcSpending();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Survey Finished\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"Welcome\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [\"Welcome! \", getUsername()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TextBlock\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert\",\n        children: \"Thanks for participating the surveys! Your result has been saved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n/*\n// Display a list of the receipts\nreturn (\n    <div>\n        <h1>Expense Calculator</h1>\n        <h6 className={\"Welcome\"}> <b>Welcome! {getUsername()}</b></h6>\n        <br/>\n        <div className = \"TextBlock\">\n            <div className=\"addAuthor\">\n                Please select date range\n                <div>\n                    <input\n                        type=\"date\"\n                        placeholder=\"StartDate\"\n                        name=\"startDate\"\n                        value={startDate}\n                        onChange={event => {\n                            setStartDate(event.target.value);\n                        }}\n                    />\n                    <input\n                        type=\"date\"\n                        placeholder=\"EndDate\"\n                        name=\"endDate\"\n                        value={endDate}\n                        onChange={event => {\n                            setEndDate(event.target.value);\n                        }}\n                    />\n                    <Button className={\"btn-success\"} onClick={onSubmit}>\n                        Find\n                    </Button>\n                </div>\n            </div>\n            <div className=\"Spending\"> Total Expenses for this period : ${spending} </div>\n        </div>\n        <Table className=\"receipt-table\">\n            <thead>\n            <tr>\n                <th scope=\"col\">ReceiptID</th>\n                <th scope=\"col\">shop</th>\n                <th scope=\"col\">description</th>\n                <th scope=\"col\">price</th>\n                <th scope=\"col\">category</th>\n                <th scope=\"col\">date</th>\n            </tr>\n            </thead>\n            <tbody>\n            {receipts.map(receipt => {\n\n                return <Tr active key={receipt._id}>\n                    <td>{receipt._id}</td>\n                    <td>{receipt.shop}</td>\n                    <td>{receipt.description}</td>\n                    <td>${receipt.Price}</td>\n                    <td>{receipt.category}</td>\n                    <td>{receipt.date.split(\"T\")[0]}</td>\n                </Tr>\n            })}\n            </tbody>\n        </Table>\n    </div>\n);\n}\n\n */\n\n_s(ExpenseCalculator, \"GVRGMG4rA2yxfkdlF2OHBMoC1kM=\");\n\n_c = ExpenseCalculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseCalculator\");","map":{"version":3,"sources":["C:/Users/37199/Documents/INFO30005-project-master/src/pages/ExpenseCalculator.js"],"names":["React","useState","UserReceipt","updateReceipt","deleteReceipt","budget","AddReceiptUserpage","Button","Table","Tr","CustomizedSelects","getID","getUsername","UserLoginState","Login","Redirect","ExpenseCalculator","buyerID","startDate","setStartDate","endDate","setEndDate","loading","setLoading","receipts","setReceipts","spending","onSubmit","then","res","CalcSpending","length","tempSpending","i"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {UserReceipt, updateReceipt, deleteReceipt, budget} from \"../api\";\n\nimport AddReceiptUserpage from \"../components/AddReceiptUserpage\";\nimport Button from \"../components/Button\";\nimport {Table, Tr} from \"styled-table-component\";\nimport CustomizedSelects from \"../components/selectBox\"\nimport \"../styles/styles.css\"\nimport {getID, getUsername, UserLoginState} from \"../components/CurrentUser\"\nimport Login from \"../components/Login\";\nimport {Redirect} from \"react-router-dom\";\n\nexport default function ExpenseCalculator() {\n    let buyerID = getID();\n    if (buyerID === \"personalpage\"){\n        buyerID = \"\";\n    }\n    const [startDate, setStartDate] = useState(\"\");\n    const [endDate, setEndDate] = useState(\"\");\n    const [loading, setLoading] = useState(true);\n    const [receipts, setReceipts] = useState([]);\n    let spending = 0;\n\n    function onSubmit() {\n        budget({\n            buyerID,\n            startDate,\n            endDate\n        }).then(res=> {\n            if (res != null){\n                setReceipts(res);\n                setLoading(false);\n            }});\n\n    }\n\n    const CalcSpending = function(){if(receipts.length > 0){\n        let tempSpending = 0;\n        for(let i = 0; i < receipts.length; i++){\n            tempSpending += receipts[i]['Price'];\n        }\n        return tempSpending;\n    }}\n\n    if(UserLoginState() === 'false'){\n        return (\n            <Redirect to={\"/signin\"} />\n        )\n    }\n\n    if(receipts.length > 0){\n        spending = CalcSpending();\n    }\n\n    return (\n        <div>\n            <h1>Survey Finished</h1>\n            <h6 className={\"Welcome\"}> <b>Welcome! {getUsername()}</b></h6>\n            <br/>\n            <div className = \"TextBlock\">\n                <div className=\"alert\">\n                   Thanks for participating the surveys! Your result has been saved.\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\n/*\n// Display a list of the receipts\nreturn (\n    <div>\n        <h1>Expense Calculator</h1>\n        <h6 className={\"Welcome\"}> <b>Welcome! {getUsername()}</b></h6>\n        <br/>\n        <div className = \"TextBlock\">\n            <div className=\"addAuthor\">\n                Please select date range\n                <div>\n                    <input\n                        type=\"date\"\n                        placeholder=\"StartDate\"\n                        name=\"startDate\"\n                        value={startDate}\n                        onChange={event => {\n                            setStartDate(event.target.value);\n                        }}\n                    />\n                    <input\n                        type=\"date\"\n                        placeholder=\"EndDate\"\n                        name=\"endDate\"\n                        value={endDate}\n                        onChange={event => {\n                            setEndDate(event.target.value);\n                        }}\n                    />\n                    <Button className={\"btn-success\"} onClick={onSubmit}>\n                        Find\n                    </Button>\n                </div>\n            </div>\n            <div className=\"Spending\"> Total Expenses for this period : ${spending} </div>\n        </div>\n        <Table className=\"receipt-table\">\n            <thead>\n            <tr>\n                <th scope=\"col\">ReceiptID</th>\n                <th scope=\"col\">shop</th>\n                <th scope=\"col\">description</th>\n                <th scope=\"col\">price</th>\n                <th scope=\"col\">category</th>\n                <th scope=\"col\">date</th>\n            </tr>\n            </thead>\n            <tbody>\n            {receipts.map(receipt => {\n\n                return <Tr active key={receipt._id}>\n                    <td>{receipt._id}</td>\n                    <td>{receipt.shop}</td>\n                    <td>{receipt.description}</td>\n                    <td>${receipt.Price}</td>\n                    <td>{receipt.category}</td>\n                    <td>{receipt.date.split(\"T\")[0]}</td>\n                </Tr>\n            })}\n            </tbody>\n        </Table>\n    </div>\n);\n}\n\n */\n"]},"metadata":{},"sourceType":"module"}