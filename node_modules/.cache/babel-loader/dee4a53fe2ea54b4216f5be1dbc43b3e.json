{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\37199\\\\Documents\\\\INFO30005-project-master\\\\src\\\\pages\\\\MonthlySpending.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { UserReceipt, updateReceipt, deleteReceipt, budget } from \"../api\";\nimport moment from 'moment';\nimport { setID, getID, UserLoginState, getUsername } from '../components/CurrentUser';\nimport AddReceiptUserpage from \"../components/AddReceiptUserpage\";\nimport Button from \"../components/Button\";\nimport { Table, Tr } from \"styled-table-component\";\nimport Login from \"../components/Login\";\nimport CustomizedSelects from \"../components/selectBox\";\nimport \"../styles/styles.css\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MonthlySpending() {\n  _s();\n\n  let buyerID = getID();\n\n  if (buyerID === \"personalpage\") {\n    buyerID = \"\";\n  }\n\n  const [displayDate, setDisplayDate] = useState(function () {\n    let date = moment(new Date(), 'YYYY-MM-DD').format().split(\"-\");\n    return date[0] + '-' + date[1];\n  });\n  const [startDate, setStartDate] = useState(function () {\n    let tempDate = moment(new Date(), 'YYYY-MM-DD').format().split(\"T\")[0].split(\"-\");\n    let end = new Date(parseInt(tempDate[0]), parseInt(tempDate[1]) - 1, 1);\n    end = moment(end, 'YYYY-MM-DD').format().split(\"T\")[0].split(\"-\");\n    return end[0] + '-' + end[1] + '-' + end[2].split(\"T\")[0];\n  });\n  const [endDate, setEndDate] = useState(function () {\n    let tempDate = moment(new Date(), 'YYYY-MM-DD').format().split(\"T\")[0].split(\"-\");\n    let end = new Date(parseInt(tempDate[0]), parseInt(tempDate[1]), 0);\n    end = moment(end, 'YYYY-MM-DD').format().split(\"T\")[0].split(\"-\");\n    return end[0] + '-' + end[1] + '-' + end[2].split(\"T\")[0];\n  });\n  const [loading, setLoading] = useState(true);\n  const [receipts, setReceipts] = useState([]);\n  const [firstLoad, setFirstLoad] = useState(false);\n  let spending = 0;\n\n  function onSubmit(query) {\n    budget(query, this).then(res => {\n      if (res != null) {\n        setReceipts(res);\n        setLoading(false);\n      }\n    });\n  }\n\n  const handleChange = event => {\n    let date = event.target.value;\n    setDisplayDate(date);\n    let startDate = date + \"-01\";\n    let tempDate = date.split(\"-\");\n    let endDate = new Date(parseInt(tempDate[0]), parseInt(tempDate[1]), 0);\n    endDate = moment(endDate, 'YYYY-MM-DD').format().split(\"T\")[0];\n    onSubmit({\n      buyerID,\n      startDate,\n      endDate\n    });\n  };\n\n  const CalcSpending = function () {\n    if (receipts.length > 0) {\n      let tempSpending = 0;\n\n      for (let i = 0; i < receipts.length; i++) {\n        tempSpending += receipts[i]['Price'];\n      }\n\n      return tempSpending;\n    }\n  };\n\n  if (UserLoginState() === 'false') {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/signin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (receipts.length > 0) {\n    spending = CalcSpending();\n  }\n\n  if (!firstLoad) {\n    setFirstLoad(true);\n    onSubmit({\n      buyerID,\n      startDate,\n      endDate\n    });\n  } // Display a list of the receipts\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Receipts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"Welcome\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [\"Welcome! \", getUsername()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TextBlock\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectMonth\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selectDes\",\n          children: \" Please select a month \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"month\",\n            placeholder: \"StartDate\",\n            name: \"startDate\",\n            value: displayDate,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Spending\",\n        children: [\" Total Spending : $\", spending, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      className: \"receipt-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"ReceiptID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"shop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: receipts.map(receipt => {\n          return /*#__PURE__*/_jsxDEV(Tr, {\n            active: true,\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: receipt._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: receipt.shop\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: receipt.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", receipt.Price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: receipt.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: receipt.date.split(\"T\")[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 25\n            }, this)]\n          }, receipt._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MonthlySpending, \"7RhWdBe0+Ms5b+AR0DuQkxOZ10Y=\");\n\n_c = MonthlySpending;\n\nvar _c;\n\n$RefreshReg$(_c, \"MonthlySpending\");","map":{"version":3,"sources":["C:/Users/37199/Documents/INFO30005-project-master/src/pages/MonthlySpending.js"],"names":["React","useState","UserReceipt","updateReceipt","deleteReceipt","budget","moment","setID","getID","UserLoginState","getUsername","AddReceiptUserpage","Button","Table","Tr","Login","CustomizedSelects","Redirect","MonthlySpending","buyerID","displayDate","setDisplayDate","date","Date","format","split","startDate","setStartDate","tempDate","end","parseInt","endDate","setEndDate","loading","setLoading","receipts","setReceipts","firstLoad","setFirstLoad","spending","onSubmit","query","then","res","handleChange","event","target","value","CalcSpending","length","tempSpending","i","map","receipt","_id","shop","description","Price","category"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {UserReceipt, updateReceipt, deleteReceipt, budget} from \"../api\";\nimport moment from 'moment'\nimport {setID, getID, UserLoginState, getUsername} from '../components/CurrentUser'\n\nimport AddReceiptUserpage from \"../components/AddReceiptUserpage\";\nimport Button from \"../components/Button\";\nimport {Table, Tr} from \"styled-table-component\";\nimport Login from \"../components/Login\"\nimport CustomizedSelects from \"../components/selectBox\"\nimport \"../styles/styles.css\"\nimport {Redirect} from \"react-router-dom\";\n\nexport default function MonthlySpending() {\n    let buyerID = getID();\n    if (buyerID === \"personalpage\"){\n        buyerID = \"\";\n    }\n    const [displayDate, setDisplayDate] = useState(function (){\n        let date = moment(new Date, 'YYYY-MM-DD').format().split(\"-\");\n        return date[0] + '-' + date[1];\n    });\n    const [startDate, setStartDate] = useState(function (){\n        let tempDate = moment(new Date, 'YYYY-MM-DD').format().split(\"T\")[0].split(\"-\");\n        let end = new Date(parseInt(tempDate[0]), parseInt(tempDate[1]) - 1 , 1);\n        end = moment(end, 'YYYY-MM-DD').format().split(\"T\")[0].split(\"-\");\n        return end[0]+ '-' + end[1] + '-' + end[2].split(\"T\")[0];\n    });\n    const [endDate, setEndDate] = useState(function(){\n        let tempDate = moment(new Date, 'YYYY-MM-DD').format().split(\"T\")[0].split(\"-\");\n        let end = new Date(parseInt(tempDate[0]), parseInt(tempDate[1]) , 0);\n        end = moment(end, 'YYYY-MM-DD').format().split(\"T\")[0].split(\"-\");\n        return end[0]+ '-' + end[1] + '-' + end[2].split(\"T\")[0];\n    });\n    const [loading, setLoading] = useState(true);\n    const [receipts, setReceipts] = useState([]);\n    const [firstLoad, setFirstLoad] = useState(false);\n    let spending = 0;\n\n\n    function onSubmit(query) {\n        budget(query, this).then(res=> {\n            if (res != null){\n                setReceipts(res);\n                setLoading(false);\n            }});\n\n    }\n\n    const handleChange = (event) => {\n        let date = event.target.value;\n        setDisplayDate(date);\n        let startDate = date + \"-01\";\n        let tempDate = date.split(\"-\");\n        let endDate = new Date(parseInt(tempDate[0]), parseInt(tempDate[1]) , 0);\n        endDate = moment(endDate, 'YYYY-MM-DD').format().split(\"T\")[0];\n        onSubmit({buyerID, startDate, endDate})\n\n    };\n\n    const CalcSpending = function(){if(receipts.length > 0){\n        let tempSpending = 0;\n        for(let i = 0; i < receipts.length; i++){\n            tempSpending += receipts[i]['Price'];\n        }\n        return tempSpending;\n    }}\n\n    if(UserLoginState() === 'false'){\n        return (\n            <Redirect to={\"/signin\"} />\n        )\n    }\n\n    if(receipts.length > 0){\n        spending = CalcSpending();\n    }\n\n    if(!firstLoad){\n        setFirstLoad(true);\n        onSubmit({buyerID, startDate, endDate});\n    }\n\n\n\n    // Display a list of the receipts\n    return (\n        <div>\n            <h1>Your Receipts</h1>\n            <h6 className={\"Welcome\"}> <b>Welcome! {getUsername()}</b></h6>\n            <br/>\n            <div className = \"TextBlock\">\n                <div className=\"selectMonth\">\n                    <div className=\"selectDes\"> Please select a month </div>\n                    <div>\n                        <input\n                            type=\"month\"\n                            placeholder=\"StartDate\"\n                            name=\"startDate\"\n                            value={displayDate}\n                            onChange={handleChange}\n                        />\n                    </div>\n                </div>\n                <div className=\"Spending\"> Total Spending : ${spending} </div>\n            </div>\n            <Table className=\"receipt-table\">\n                <thead>\n                <tr>\n                    <th scope=\"col\">ReceiptID</th>\n                    <th scope=\"col\">shop</th>\n                    <th scope=\"col\">description</th>\n                    <th scope=\"col\">price</th>\n                    <th scope=\"col\">category</th>\n                    <th scope=\"col\">date</th>\n                </tr>\n                </thead>\n                <tbody>\n                {receipts.map(receipt => {\n\n                    return <Tr active key={receipt._id}>\n                        <td>{receipt._id}</td>\n                        <td>{receipt.shop}</td>\n                        <td>{receipt.description}</td>\n                        <td>${receipt.Price}</td>\n                        <td>{receipt.category}</td>\n                        <td>{receipt.date.split(\"T\")[0]}</td>\n                    </Tr>\n                })}\n                </tbody>\n            </Table>\n        </div>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}